# Provides timestamp support
notify_daemon__libtimestamp()
{
	# ${1} -> event name
	# ${2} -> timestamp path
	# ${3} -> timestamp validity
	# ${4} -> 'empty-timestamp' (optional)

	# Declare variables
	local create_timestamp='true'
	local date_now="$(date '+%d.%m.%Y %H:%M:%S')"

	# Initialize timestamp file
	[ -e "${2}" ] && create_timestamp=false || log " ${1} notify_daemon__libtimestamp: timestamp file will be created"
	#[ -e "${2}" ] || echo "${1} begin timestamp ${date_now}" >> ${2}
	if [ ! -e "${2}" ]; then
		[ "${4}" = 'empty-timestamp' ] && echo -n '' > ${2} || echo "${1} event begin timestamp $(date '+%d.%m.%Y %H:%M:%S')" >> ${2}
	fi

	if ${create_timestamp} || [ "$(($(date -r ${2} '+%s') + ${3}))" -lt "$(date '+%s')" ]; then
		[ "${4}" = 'empty-timestamp' ] && echo -n '' > ${2} || echo "${1} event new timestamp $(date '+%d.%m.%Y %H:%M:%S')" >> ${2}
		type log > /dev/null 2>&1 && log " ${1} notify_daemon__libtimestamp: new timestamp saved"
		return 0
	else
		type log > /dev/null 2>&1 && log " ${1} notify_daemon__libtimestamp: timestamp is valid - no action taken"
		return 1
	fi
}
debug_log 'libtimestamp: notify_daemon__libtimestamp imported'
