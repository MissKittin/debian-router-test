# Check IPv4 connection library
# Command stack: ping, wget, grep, timeout

# Define CHECK_IP4_TEST_ADDRESS before importing
# Define PUBLIC_IP4_TEST_ADDRESS before importing (optional)

#public_ipv4__check_internet()
#{
#	ip=$(timeout 1 wget -4 -q -O- --timeout=1 ${PUBLIC_IP4_TEST_ADDRESS})
#	[ "$2" = 'on-dashboard' ] && newline='-n' || newline='' # no newline if displayed on dashboard
#	if echo -n "$ip" | grep -E '^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$' > /dev/null 2>&1; then # if ip is correct
#		if [ "$2" = 'on-dashboard' ]; then # parse for dashboard
#			echo "IPv4 Internet connection: yes, public IP: ${ip}<br>"
#		else # parse for login screen
#			echo 'IPv4 Internet connection: yes<br>'
#			echo "Public IP: $ip"
#		fi
#	else # no ipv4 internet
#		echo $newline 'Internet connection: no'
#		[ "$2" = 'on-dashboard' ] && echo '<br>'
#	fi
#}
public_ipv4__check_internet()
{
	if timeout 1 ping -c 1 -W 1 ${CHECK_IP4_TEST_ADDRESS} > /dev/null 2>&1; then
		if [ ! "${PUBLIC_IP4_TEST_ADDRESS}" = '' ]; then
			local ip="$(timeout 2 wget -4 -q -O- --timeout=1 --no-check-certificate ${PUBLIC_IP4_TEST_ADDRESS})"
			if echo -n "${ip}" | grep -E '^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$' > /dev/null 2>&1; then
				#[ "${2}" = 'on-dashboard' ] && \
				#	echo "IPv4 Internet connection: yes, public IP: ${ip}<br>" || \
					echo "IPv4 Internet connection: yes<br>Public IPv4: ${ip}"
			fi
		else
			#[ "${2}" = 'on-dashboard' ] && \
			#	echo 'IPv4 Internet connection: yes<br>' || \
				echo 'IPv4 Internet connection: yes'
		fi
	else
		#[ "${2}" = 'on-dashboard' ] && \
		#	echo 'IPv4 Internet connection: no<br>' || \
			echo 'IPv4 Internet connection: no'
	fi
}

if [ "${IP4_NO_CASE}" = '' ]; then
	case $1 in
		'check-internet')
			public_ipv4__check_internet ${@}
		;;
	esac
else
	public_ipv4__check_internet ${IP4_FUNCTION_OPTS}
	unset public_ipv4__check_internet
fi
